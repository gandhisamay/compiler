S = Program $
Program = ModuleDeclarations OtherModules DriverModule OtherModules
ModuleDeclarations = ModuleDeclaration ModuleDeclarations
ModuleDeclarations = #
ModuleDeclaration = dECLARE mODULE iD sEMICOL
OtherModules = Module OtherModules
OtherModules = #
DriverModule = dRIVERDEF dRIVER pROGRAM dRIVERENDDEF ModuleDef
Module = dEF mODULE iD eNDDEF tAKES iNPUT sQBO Input_plist sQBC sEMICOL Ret ModuleDef
Ret = rETURNS sQBO Output_plist sQBC sEMICOL
Ret = #
Input_plist = iD cOLON DataType N1
N1 = cOMMA iD cOLON DataType N1
N1 = #
Output_plist = iD cOLON Type N2
N2 = cOMMA iD cOLON Type N2
N2 = #
DataType = iNTEGER
DataType = rEAL
DataType = bOOLEAN
DataType = aRRAY sQBO Range_arrays sQBC oF Type
Range_arrays = Index_arr rANGEOP Index_arr
Type = iNTEGER
Type = rEAL
Type = bOOLEAN
ModuleDef = sTART Statements eND
Statements = Statement Statements
Statements = #
Statement = IoStmt
Statement = SimpleStmt
Statement = DeclareStmt
Statement = ConditionalStmt
Statement = IterativeStmt
IoStmt = gET_VALUE bO iD bC sEMICOL
IoStmt = pRINT bO Var_print bC sEMICOL
BoolConstt = tRUE
BoolConstt = fALSE
Id_num_rnum = iD
Id_num_rnum = nUM
Id_num_rnum = rNUM
Var_id_num = iD
Var_id_num = nUM
Var_id_num = rNUM
Array_element_for_print = iD sQBO Index_arr sQBC
Var_print = iD P1
Var_print = nUM
Var_print = rNUM
Var_print = BoolConstt
P1 = sQBO New_index sQBC
P1 = #
SimpleStmt = AssignmentStmt
SimpleStmt = ModuleReuseStmt
AssignmentStmt = iD WhichStmt
WhichStmt = LvalueIDStmt
WhichStmt = LvalueARRStmt
LvalueIDStmt = aSSIGNOP Expression sEMICOL
LvalueARRStmt = sQBO Element_index_with_expressions sQBC aSSIGNOP Expression sEMICOL
Index_arr = Sign New_index
Index_arr = New_index
New_index = nUM
New_index = iD
Sign = pLUS
Sign = mINUS
ModuleReuseStmt = Optional uSE mODULE iD wITH pARAMETERS Actual_para_list sEMICOL
Actual_para_list1 = cOMMA Actual_para_list
Actual_para_list = nUM Actual_para_list1
Actual_para_list = rNUM Actual_para_list1
Actual_para_list = BoolConstt Actual_para_list1
Actual_para_list = iD N11 Actual_para_list1
Optional = sQBO IdList sQBC aSSIGNOP
Optional = #
IdList = iD N3
N3 = cOMMA iD N3
N3 = #
Expression = ArithmeticOrBooleanExpr
Expression = U
U = Unary_op New_NT
New_NT = bO ArithmeticExpr bC
New_NT = Var_id_num
Unary_op = pLUS
Unary_op = mINUS
ArithmeticOrBooleanExpr = AnyTerm N7
N7 = LogicalOp AnyTerm N7
N7 = #
AnyTerm = ArithmeticExpr N8
N8 = RelationalOp ArithmeticExpr
N8 = #
ArithmeticExpr = Term N4
N4 = Op1 Term N4
N4 = #
Term = Factor N5
N5 = Op2 Factor N5
N5 = #
Factor = bO ArithmeticOrBooleanExpr bC
Factor = nUM
Factor = rNUM
Factor = BoolConstt
Factor = iD N11
N11 = sQBO Element_index_with_expressions sQBC
N11 = #
Element_index_with_expressions = Sign N10
Element_index_with_expressions = ArrExpr
N10 = New_index
N10 = bO ArrExpr bC
ArrExpr = ArrTerm Arr_N4
Arr_N4 = Op1 ArrTerm Arr_N4
Arr_N4 = #
ArrTerm = ArrFactor Arr_N5
Arr_N5 = Op2 ArrFactor Arr_N5
Arr_N5 = #
ArrFactor = iD
ArrFactor = nUM
ArrFactor = BoolConstt
ArrFactor = bO ArrExpr bC
Op1 = pLUS
Op1 = mINUS
Op2 = mUL
Op2 = dIV
LogicalOp = aND
LogicalOp = oR
RelationalOp = lT
RelationalOp = lE
RelationalOp = gT
RelationalOp = gE
RelationalOp = eQ
RelationalOp = nE
DeclareStmt = dECLARE IdList cOLON DataType sEMICOL
ConditionalStmt = sWITCH bO iD bC sTART CaseStmts Default eND
CaseStmts = cASE Value cOLON Statements bREAK sEMICOL N9
N9 = cASE Value cOLON Statements bREAK sEMICOL N9
N9 = #
Value = nUM
Value = tRUE
Value = fALSE
Default = dEFAULT cOLON Statements bREAK sEMICOL
Default = #
IterativeStmt = fOR bO iD iN Range_for_loop bC sTART Statements eND
IterativeStmt = wHILE bO ArithmeticOrBooleanExpr bC sTART Statements eND
Range = nUM rANGEOP nUM
Range_for_loop = Index_for_loop rANGEOP Index_for_loop
Index_for_loop = Sign_for_loop New_index_for_loop
New_index_for_loop = nUM
Sign_for_loop = pLUS
Sign_for_loop = mINUS
Sign_for_loop = #
