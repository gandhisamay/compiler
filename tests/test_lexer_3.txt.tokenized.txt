

TOKENIZATION COMPLETE:- 113 TOKENS

LINE: [0] TOKEN: ID        : <<
LINE: [0] TOKEN: ID        : module
LINE: [0] TOKEN: ID        : mod1
LINE: [0] TOKEN: ID        : >>
LINE: [1] TOKEN: ID        : takes
LINE: [1] TOKEN: ID        : input
LINE: [1] TOKEN: ID        : [
LINE: [1] TOKEN: ID        : index
LINE: [1] TOKEN: ID        : :
LINE: [1] TOKEN: ID        : integer
LINE: [1] TOKEN: ID        : ,
LINE: [1] TOKEN: ID        : val_
LINE: [1] TOKEN: ID        : :
LINE: [1] TOKEN: ID        : integer
LINE: [1] TOKEN: ID        : ]
LINE: [1] TOKEN: ID        : ;
LINE: [3] TOKEN: ID        : start
LINE: [4] TOKEN: ID        : declare
LINE: [4] TOKEN: ID        : i_1
LINE: [4] TOKEN: ID        : :
LINE: [4] TOKEN: ID        : integer
LINE: [4] TOKEN: ID        : ;
LINE: [5] TOKEN: ID        : i_1
LINE: [5] TOKEN: ID        : :=
LINE: [5] TOKEN: ID        : val_
LINE: [5] TOKEN: ID        : +
LINE: [5] TOKEN: ID        : index
LINE: [5] TOKEN: ID        : -
LINE: [5] TOKEN: NUM       : 4 
LINE: [5] TOKEN: ID        : ;
LINE: [6] TOKEN: ID        : print
LINE: [6] TOKEN: ID        : (
LINE: [6] TOKEN: ID        : i_1
LINE: [6] TOKEN: ID        : )
LINE: [6] TOKEN: ID        : ;
LINE: [7] TOKEN: ID        : end
LINE: [9] TOKEN: ID        : <<<
LINE: [9] TOKEN: ID        : driver
LINE: [9] TOKEN: ID        : Program
LINE: [9] TOKEN: ID        : >>>
LINE: [10] TOKEN: ID        : start
LINE: [11] TOKEN: ID        : declare
LINE: [11] TOKEN: ID        : a
LINE: [11] TOKEN: ID        : ,
LINE: [11] TOKEN: ID        : b
LINE: [11] TOKEN: ID        : ,
LINE: [11] TOKEN: ID        : dummy
LINE: [11] TOKEN: ID        : :
LINE: [11] TOKEN: ID        : integer
LINE: [11] TOKEN: ID        : ;
LINE: [12] TOKEN: ID        : a
LINE: [12] TOKEN: ID        : :=
LINE: [12] TOKEN: NUM       : 48 
LINE: [12] TOKEN: ID        : ;
LINE: [13] TOKEN: ID        : b
LINE: [13] TOKEN: ID        : :=
LINE: [13] TOKEN: NUM       : 10 
LINE: [13] TOKEN: ID        : ;
LINE: [14] TOKEN: ID        : dummy
LINE: [14] TOKEN: ID        : :=
LINE: [14] TOKEN: NUM       : 100 
LINE: [14] TOKEN: ID        : ;
LINE: [15] TOKEN: ID        : declare
LINE: [15] TOKEN: ID        : flag
LINE: [15] TOKEN: ID        : :
LINE: [15] TOKEN: ID        : boolean
LINE: [15] TOKEN: ID        : ;
LINE: [16] TOKEN: ID        : flag
LINE: [16] TOKEN: ID        : :=
LINE: [16] TOKEN: ID        : (
LINE: [16] TOKEN: ID        : a
LINE: [16] TOKEN: ID        : >=
LINE: [16] TOKEN: NUM       : 30 
LINE: [16] TOKEN: ID        : )
LINE: [16] TOKEN: ID        : AND
LINE: [16] TOKEN: ID        : (
LINE: [16] TOKEN: ID        : b
LINE: [16] TOKEN: ID        : <
LINE: [16] TOKEN: NUM       : 30 
LINE: [16] TOKEN: ID        : )
LINE: [16] TOKEN: ID        : ;
LINE: [17] TOKEN: ID        : switch
LINE: [17] TOKEN: ID        : (
LINE: [17] TOKEN: ID        : flag
LINE: [17] TOKEN: ID        : )
LINE: [18] TOKEN: ID        : start
LINE: [19] TOKEN: ID        : case
LINE: [19] TOKEN: ID        : false
LINE: [19] TOKEN: ID        : :
LINE: [19] TOKEN: ID        : print
LINE: [19] TOKEN: ID        : (
LINE: [19] TOKEN: NUM       : 100 
LINE: [19] TOKEN: ID        : )
LINE: [19] TOKEN: ID        : ;
LINE: [20] TOKEN: ID        : break
LINE: [20] TOKEN: ID        : ;
LINE: [21] TOKEN: ID        : case
LINE: [21] TOKEN: ID        : true
LINE: [21] TOKEN: ID        : :
LINE: [21] TOKEN: ID        : use
LINE: [21] TOKEN: ID        : module
LINE: [21] TOKEN: ID        : mod1
LINE: [21] TOKEN: ID        : with
LINE: [21] TOKEN: ID        : parameters
LINE: [21] TOKEN: ID        : a
LINE: [21] TOKEN: ID        : ,
LINE: [21] TOKEN: ID        : b
LINE: [21] TOKEN: ID        : ;
LINE: [22] TOKEN: ID        : break
LINE: [22] TOKEN: ID        : ;
LINE: [23] TOKEN: ID        : end
LINE: [24] TOKEN: ID        : end
LINE: [25] TOKEN: EOF/DOLLAR: EOF
