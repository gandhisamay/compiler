==============>  Name: dECLARE, Enum_T: 0, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> mODULE -> iD -> sEMICOL -> [END]


==============>  Name: ModuleDeclaration, Enum_T: -1, Enum_NT: 3, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> ModuleDeclarations -> [END]


==============>  Name: mODULE, Enum_T: 2, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iD -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ModuleDeclarations, Enum_T: -1, Enum_NT: 2, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> OtherModules -> DriverModule -> OtherModules -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ModuleDeclarations, Enum_T: -1, Enum_NT: 2, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Program, Enum_T: -1, Enum_NT: 1, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> $ -> [END]


==============>  Name: dEF, Enum_T: 9, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> mODULE -> iD -> eNDDEF -> tAKES -> iNPUT -> sQBO -> Input_plist -> sQBC -> sEMICOL -> Ret -> ModuleDef -> [END]


==============>  Name: Module, Enum_T: -1, Enum_NT: 6, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> OtherModules -> [END]


==============>  Name: mODULE, Enum_T: 2, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iD -> eNDDEF -> tAKES -> iNPUT -> sQBO -> Input_plist -> sQBC -> sEMICOL -> Ret -> ModuleDef -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> eNDDEF -> tAKES -> iNPUT -> sQBO -> Input_plist -> sQBC -> sEMICOL -> Ret -> ModuleDef -> [END]


==============>  Name: eNDDEF, Enum_T: 10, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> tAKES -> iNPUT -> sQBO -> Input_plist -> sQBC -> sEMICOL -> Ret -> ModuleDef -> [END]


==============>  Name: tAKES, Enum_T: 11, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iNPUT -> sQBO -> Input_plist -> sQBC -> sEMICOL -> Ret -> ModuleDef -> [END]


==============>  Name: iNPUT, Enum_T: 12, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sQBO -> Input_plist -> sQBC -> sEMICOL -> Ret -> ModuleDef -> [END]


==============>  Name: sQBO, Enum_T: 13, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Input_plist -> sQBC -> sEMICOL -> Ret -> ModuleDef -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> cOLON -> DataType -> N1 -> [END]


==============>  Name: Input_plist, Enum_T: -1, Enum_NT: 8, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sQBC -> sEMICOL -> Ret -> ModuleDef -> [END]


==============>  Name: cOLON, Enum_T: 16, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> DataType -> N1 -> [END]


==============>  Name: aRRAY, Enum_T: 21, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sQBO -> Range_arrays -> sQBC -> oF -> Type -> [END]


==============>  Name: DataType, Enum_T: -1, Enum_NT: 12, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N1 -> [END]


==============>  Name: sQBO, Enum_T: 13, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Range_arrays -> sQBC -> oF -> Type -> [END]


==============>  Name: nUM, Enum_T: 32, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: New_index, Enum_T: -1, Enum_NT: 31, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Index_arr, Enum_T: -1, Enum_NT: 30, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> rANGEOP -> Index_arr -> [END]


==============>  Name: Range_arrays, Enum_T: -1, Enum_NT: 13, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sQBC -> oF -> Type -> [END]


==============>  Name: rANGEOP, Enum_T: 23, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Index_arr -> [END]


==============>  Name: nUM, Enum_T: 32, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: New_index, Enum_T: -1, Enum_NT: 31, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Index_arr, Enum_T: -1, Enum_NT: 30, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: sQBC, Enum_T: 14, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> oF -> Type -> [END]


==============>  Name: oF, Enum_T: 22, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Type -> [END]


==============>  Name: rEAL, Enum_T: 19, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Type, Enum_T: -1, Enum_NT: 14, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: cOMMA, Enum_T: 17, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iD -> cOLON -> DataType -> N1 -> [END]


==============>  Name: N1, Enum_T: -1, Enum_NT: 9, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> cOLON -> DataType -> N1 -> [END]


==============>  Name: cOLON, Enum_T: 16, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> DataType -> N1 -> [END]


==============>  Name: iNTEGER, Enum_T: 18, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: DataType, Enum_T: -1, Enum_NT: 12, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N1 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N1, Enum_T: -1, Enum_NT: 9, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: sQBC, Enum_T: 14, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> Ret -> ModuleDef -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Ret -> ModuleDef -> [END]


==============>  Name: rETURNS, Enum_T: 15, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sQBO -> Output_plist -> sQBC -> sEMICOL -> [END]


==============>  Name: Ret, Enum_T: -1, Enum_NT: 7, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> ModuleDef -> [END]


==============>  Name: sQBO, Enum_T: 13, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Output_plist -> sQBC -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> cOLON -> Type -> N2 -> [END]


==============>  Name: Output_plist, Enum_T: -1, Enum_NT: 10, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sQBC -> sEMICOL -> [END]


==============>  Name: cOLON, Enum_T: 16, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Type -> N2 -> [END]


==============>  Name: rEAL, Enum_T: 19, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Type, Enum_T: -1, Enum_NT: 14, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N2 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N2, Enum_T: -1, Enum_NT: 11, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: sQBC, Enum_T: 14, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: sTART, Enum_T: 24, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> eND -> [END]


==============>  Name: ModuleDef, Enum_T: -1, Enum_NT: 15, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: dECLARE, Enum_T: 0, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> IdList -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: DeclareStmt, Enum_T: -1, Enum_NT: 63, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N3 -> [END]


==============>  Name: IdList, Enum_T: -1, Enum_NT: 36, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N3, Enum_T: -1, Enum_NT: 37, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: cOLON, Enum_T: 16, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> DataType -> sEMICOL -> [END]


==============>  Name: iNTEGER, Enum_T: 18, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: DataType, Enum_T: -1, Enum_NT: 12, IS_A: Non Terminal
First: aRRAY,bOOLEAN,rEAL,iNTEGER
Follow: sEMICOL,sQBC,cOMMA
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> eND -> [END]


==============>  Name: dECLARE, Enum_T: 0, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> IdList -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: DeclareStmt, Enum_T: -1, Enum_NT: 63, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N3 -> [END]


==============>  Name: IdList, Enum_T: -1, Enum_NT: 36, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N3, Enum_T: -1, Enum_NT: 37, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: cOLON, Enum_T: 16, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> DataType -> sEMICOL -> [END]


==============>  Name: bOOLEAN, Enum_T: 20, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: DataType, Enum_T: -1, Enum_NT: 12, IS_A: Non Terminal
First: aRRAY,bOOLEAN,rEAL,iNTEGER
Follow: sEMICOL,sQBC,cOMMA
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: fOR, Enum_T: 54, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> iD -> iN -> Range_for_loop -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: IterativeStmt, Enum_T: -1, Enum_NT: 69, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iD -> iN -> Range_for_loop -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iN -> Range_for_loop -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: iN, Enum_T: 55, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Range_for_loop -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: Range_for_loop, Enum_T: -1, Enum_NT: 71, IS_A: Non Terminal
First: mINUS,pLUS,nUM
Follow: bC
Right: [HEAD] -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sTART -> Statements -> eND -> [END]


==============>  Name: sTART, Enum_T: 24, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> eND -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> eND -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: aSSIGNOP, Enum_T: 34, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Expression -> sEMICOL -> [END]


==============>  Name: LvalueIDStmt, Enum_T: -1, Enum_NT: 28, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N11 -> [END]


==============>  Name: Factor, Enum_T: -1, Enum_NT: 50, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N5 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N11, Enum_T: -1, Enum_NT: 51, IS_A: Non Terminal
First: #,sQBO
Follow: mUL,dIV,bC,lT,lE,gT,gE,eQ,nE,oR,aND,mINUS,pLUS,cOMMA,sEMICOL
Right: [HEAD] -> [END]


==============>  Name: Term, Enum_T: -1, Enum_NT: 48, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N4 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N5, Enum_T: -1, Enum_NT: 49, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticExpr, Enum_T: -1, Enum_NT: 46, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N8 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N4, Enum_T: -1, Enum_NT: 47, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: AnyTerm, Enum_T: -1, Enum_NT: 44, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N7 -> [END]


==============>  Name: lE, Enum_T: 45, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: RelationalOp, Enum_T: -1, Enum_NT: 62, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> ArithmeticExpr -> [END]


==============>  Name: N8, Enum_T: -1, Enum_NT: 45, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N11 -> [END]


==============>  Name: Factor, Enum_T: -1, Enum_NT: 50, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N5 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N11, Enum_T: -1, Enum_NT: 51, IS_A: Non Terminal
First: #,sQBO
Follow: mUL,dIV,bC,lT,lE,gT,gE,eQ,nE,oR,aND,mINUS,pLUS,cOMMA,sEMICOL
Right: [HEAD] -> [END]


==============>  Name: Term, Enum_T: -1, Enum_NT: 48, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N4 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N5, Enum_T: -1, Enum_NT: 49, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticExpr, Enum_T: -1, Enum_NT: 46, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N4, Enum_T: -1, Enum_NT: 47, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticOrBooleanExpr, Enum_T: -1, Enum_NT: 42, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N7, Enum_T: -1, Enum_NT: 43, IS_A: Non Terminal
First: #,aND,oR
Follow: sEMICOL,bC
Right: [HEAD] -> [END]


==============>  Name: Expression, Enum_T: -1, Enum_NT: 38, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: sWITCH, Enum_T: 50, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> iD -> bC -> sTART -> CaseStmts -> Default -> eND -> [END]


==============>  Name: ConditionalStmt, Enum_T: -1, Enum_NT: 64, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iD -> bC -> sTART -> CaseStmts -> Default -> eND -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bC -> sTART -> CaseStmts -> Default -> eND -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sTART -> CaseStmts -> Default -> eND -> [END]


==============>  Name: sTART, Enum_T: 24, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> CaseStmts -> Default -> eND -> [END]


==============>  Name: cASE, Enum_T: 51, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Value -> cOLON -> Statements -> bREAK -> sEMICOL -> N9 -> [END]


==============>  Name: CaseStmts, Enum_T: -1, Enum_NT: 65, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Default -> eND -> [END]


==============>  Name: tRUE, Enum_T: 30, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Value, Enum_T: -1, Enum_NT: 67, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> cOLON -> Statements -> bREAK -> sEMICOL -> N9 -> [END]


==============>  Name: cOLON, Enum_T: 16, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> bREAK -> sEMICOL -> N9 -> [END]


==============>  Name: pRINT, Enum_T: 29, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> Var_print -> bC -> sEMICOL -> [END]


==============>  Name: IoStmt, Enum_T: -1, Enum_NT: 18, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Var_print -> bC -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> P1 -> [END]


==============>  Name: Var_print, Enum_T: -1, Enum_NT: 23, IS_A: Non Terminal
First: tRUE,fALSE,rNUM,nUM,iD
Follow: bC
Right: [HEAD] -> bC -> sEMICOL -> [END]


==============>  Name: sQBO, Enum_T: 13, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Index_arr -> sQBC -> [END]


==============>  Name: P1, Enum_T: -1, Enum_NT: 24, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: New_index, Enum_T: -1, Enum_NT: 31, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Index_arr, Enum_T: -1, Enum_NT: 30, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sQBC -> [END]


==============>  Name: sQBC, Enum_T: 14, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bREAK -> sEMICOL -> N9 -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: aSSIGNOP, Enum_T: 34, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Expression -> sEMICOL -> [END]


==============>  Name: LvalueIDStmt, Enum_T: -1, Enum_NT: 28, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N11 -> [END]


==============>  Name: Factor, Enum_T: -1, Enum_NT: 50, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N5 -> [END]


==============>  Name: N11, Enum_T: -1, Enum_NT: 51, IS_A: Non Terminal
First: #,sQBO
Follow: mUL,dIV,bC,lT,lE,gT,gE,eQ,nE,oR,aND,mINUS,pLUS,cOMMA,sEMICOL
Right: [HEAD] -> [END]


==============>  Name: Term, Enum_T: -1, Enum_NT: 48, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N4 -> [END]


==============>  Name: N5, Enum_T: -1, Enum_NT: 49, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticExpr, Enum_T: -1, Enum_NT: 46, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N8 -> [END]


==============>  Name: N4, Enum_T: -1, Enum_NT: 47, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: AnyTerm, Enum_T: -1, Enum_NT: 44, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N7 -> [END]


==============>  Name: N8, Enum_T: -1, Enum_NT: 45, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticOrBooleanExpr, Enum_T: -1, Enum_NT: 42, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N7, Enum_T: -1, Enum_NT: 43, IS_A: Non Terminal
First: #,aND,oR
Follow: sEMICOL,bC
Right: [HEAD] -> [END]


==============>  Name: Expression, Enum_T: -1, Enum_NT: 38, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: sQBO, Enum_T: 13, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Element_index_with_expressions -> sQBC -> aSSIGNOP -> Expression -> sEMICOL -> [END]


==============>  Name: LvalueARRStmt, Enum_T: -1, Enum_NT: 29, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArrFactor, Enum_T: -1, Enum_NT: 58, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Arr_N5 -> [END]


==============>  Name: ArrTerm, Enum_T: -1, Enum_NT: 56, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Arr_N4 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Arr_N5, Enum_T: -1, Enum_NT: 57, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArrExpr, Enum_T: -1, Enum_NT: 54, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Arr_N4, Enum_T: -1, Enum_NT: 55, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Element_index_with_expressions, Enum_T: -1, Enum_NT: 52, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sQBC -> aSSIGNOP -> Expression -> sEMICOL -> [END]


==============>  Name: sQBC, Enum_T: 14, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> aSSIGNOP -> Expression -> sEMICOL -> [END]


==============>  Name: aSSIGNOP, Enum_T: 34, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Expression -> sEMICOL -> [END]


==============>  Name: Expression, Enum_T: -1, Enum_NT: 38, IS_A: Non Terminal
First: mINUS,pLUS,bO,nUM,rNUM,fALSE,tRUE,iD
Follow: sEMICOL
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: pRINT, Enum_T: 29, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> Var_print -> bC -> sEMICOL -> [END]


==============>  Name: IoStmt, Enum_T: -1, Enum_NT: 18, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Var_print -> bC -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> P1 -> [END]


==============>  Name: Var_print, Enum_T: -1, Enum_NT: 23, IS_A: Non Terminal
First: tRUE,fALSE,rNUM,nUM,iD
Follow: bC
Right: [HEAD] -> bC -> sEMICOL -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: P1, Enum_T: -1, Enum_NT: 24, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: pRINT, Enum_T: 29, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> Var_print -> bC -> sEMICOL -> [END]


==============>  Name: IoStmt, Enum_T: -1, Enum_NT: 18, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Var_print -> bC -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> P1 -> [END]


==============>  Name: Var_print, Enum_T: -1, Enum_NT: 23, IS_A: Non Terminal
First: tRUE,fALSE,rNUM,nUM,iD
Follow: bC
Right: [HEAD] -> bC -> sEMICOL -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: P1, Enum_T: -1, Enum_NT: 24, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: bREAK, Enum_T: 52, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> N9 -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N9 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N9, Enum_T: -1, Enum_NT: 66, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Default, Enum_T: -1, Enum_NT: 68, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> eND -> [END]


==============>  Name: eND, Enum_T: 25, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: eND, Enum_T: 25, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: pRINT, Enum_T: 29, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> Var_print -> bC -> sEMICOL -> [END]


==============>  Name: IoStmt, Enum_T: -1, Enum_NT: 18, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Var_print -> bC -> sEMICOL -> [END]


==============>  Name: Var_print, Enum_T: -1, Enum_NT: 23, IS_A: Non Terminal
First: tRUE,fALSE,rNUM,nUM,iD
Follow: bC
Right: [HEAD] -> bC -> sEMICOL -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: dECLARE, Enum_T: 0, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> IdList -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: DeclareStmt, Enum_T: -1, Enum_NT: 63, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N3 -> [END]


==============>  Name: IdList, Enum_T: -1, Enum_NT: 36, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N3, Enum_T: -1, Enum_NT: 37, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: cOLON, Enum_T: 16, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> DataType -> sEMICOL -> [END]


==============>  Name: aRRAY, Enum_T: 21, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sQBO -> Range_arrays -> sQBC -> oF -> Type -> [END]


==============>  Name: DataType, Enum_T: -1, Enum_NT: 12, IS_A: Non Terminal
First: aRRAY,bOOLEAN,rEAL,iNTEGER
Follow: sEMICOL,sQBC,cOMMA
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sQBO, Enum_T: 13, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Range_arrays -> sQBC -> oF -> Type -> [END]


==============>  Name: nUM, Enum_T: 32, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: New_index, Enum_T: -1, Enum_NT: 31, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Index_arr, Enum_T: -1, Enum_NT: 30, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> rANGEOP -> Index_arr -> [END]


==============>  Name: Range_arrays, Enum_T: -1, Enum_NT: 13, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sQBC -> oF -> Type -> [END]


==============>  Name: rANGEOP, Enum_T: 23, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Index_arr -> [END]


==============>  Name: nUM, Enum_T: 32, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: New_index, Enum_T: -1, Enum_NT: 31, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Index_arr, Enum_T: -1, Enum_NT: 30, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: sQBC, Enum_T: 14, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> oF -> Type -> [END]


==============>  Name: oF, Enum_T: 22, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Type -> [END]


==============>  Name: rEAL, Enum_T: 19, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Type, Enum_T: -1, Enum_NT: 14, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: dECLARE, Enum_T: 0, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> IdList -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: DeclareStmt, Enum_T: -1, Enum_NT: 63, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N3 -> [END]


==============>  Name: IdList, Enum_T: -1, Enum_NT: 36, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N3, Enum_T: -1, Enum_NT: 37, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: cOLON, Enum_T: 16, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> DataType -> sEMICOL -> [END]


==============>  Name: iNTEGER, Enum_T: 18, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: DataType, Enum_T: -1, Enum_NT: 12, IS_A: Non Terminal
First: aRRAY,bOOLEAN,rEAL,iNTEGER
Follow: sEMICOL,sQBC,cOMMA
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: dECLARE, Enum_T: 0, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> IdList -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: DeclareStmt, Enum_T: -1, Enum_NT: 63, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N3 -> [END]


==============>  Name: IdList, Enum_T: -1, Enum_NT: 36, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N3, Enum_T: -1, Enum_NT: 37, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: cOLON, Enum_T: 16, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> DataType -> sEMICOL -> [END]


==============>  Name: rEAL, Enum_T: 19, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: DataType, Enum_T: -1, Enum_NT: 12, IS_A: Non Terminal
First: aRRAY,bOOLEAN,rEAL,iNTEGER
Follow: sEMICOL,sQBC,cOMMA
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: gET_VALUE, Enum_T: 26, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> iD -> bC -> sEMICOL -> [END]


==============>  Name: IoStmt, Enum_T: -1, Enum_NT: 18, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iD -> bC -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bC -> sEMICOL -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Optional, Enum_T: -1, Enum_NT: 35, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> uSE -> mODULE -> iD -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: ModuleReuseStmt, Enum_T: -1, Enum_NT: 33, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: uSE, Enum_T: 37, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> mODULE -> iD -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: mODULE, Enum_T: 2, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iD -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: wITH, Enum_T: 38, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: pARAMETERS, Enum_T: 39, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: Actual_para_list, Enum_T: -1, Enum_NT: 34, IS_A: Non Terminal
First: nUM,rNUM,fALSE,tRUE,iD,pLUS,mINUS
Follow: sEMICOL
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: wHILE, Enum_T: 56, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> ArithmeticOrBooleanExpr -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: IterativeStmt, Enum_T: -1, Enum_NT: 69, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> ArithmeticOrBooleanExpr -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: ArithmeticOrBooleanExpr, Enum_T: -1, Enum_NT: 42, IS_A: Non Terminal
First: iD,tRUE,fALSE,rNUM,nUM,bO
Follow: bC,sEMICOL
Right: [HEAD] -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sTART -> Statements -> eND -> [END]


==============>  Name: sTART, Enum_T: 24, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> eND -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> eND -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: sQBO, Enum_T: 13, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> IdList -> sQBC -> aSSIGNOP -> [END]


==============>  Name: Optional, Enum_T: -1, Enum_NT: 35, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> uSE -> mODULE -> iD -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N3 -> [END]


==============>  Name: IdList, Enum_T: -1, Enum_NT: 36, IS_A: Non Terminal
First: iD
Follow: cOLON,sQBC
Right: [HEAD] -> sQBC -> aSSIGNOP -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N3, Enum_T: -1, Enum_NT: 37, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: sQBC, Enum_T: 14, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> aSSIGNOP -> [END]


==============>  Name: aSSIGNOP, Enum_T: 34, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ModuleReuseStmt, Enum_T: -1, Enum_NT: 33, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: uSE, Enum_T: 37, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> mODULE -> iD -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: mODULE, Enum_T: 2, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iD -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: wITH, Enum_T: 38, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: pARAMETERS, Enum_T: 39, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Sign_for_loop, Enum_T: -1, Enum_NT: 74, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Actual_para_iD -> Actual_para_list1 -> [END]


==============>  Name: Actual_para_list, Enum_T: -1, Enum_NT: 34, IS_A: Non Terminal
First: nUM,rNUM,fALSE,tRUE,iD,pLUS,mINUS
Follow: sEMICOL
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N11 -> [END]


==============>  Name: Actual_para_iD, Enum_T: -1, Enum_NT: 76, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Actual_para_list1 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N11, Enum_T: -1, Enum_NT: 51, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: cOMMA, Enum_T: 17, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Sign_for_loop -> Actual_para_iD -> Actual_para_list1 -> [END]


==============>  Name: Actual_para_list1, Enum_T: -1, Enum_NT: 75, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Sign_for_loop, Enum_T: -1, Enum_NT: 74, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Actual_para_iD -> Actual_para_list1 -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N11 -> [END]


==============>  Name: Actual_para_iD, Enum_T: -1, Enum_NT: 76, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Actual_para_list1 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N11, Enum_T: -1, Enum_NT: 51, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Actual_para_list1, Enum_T: -1, Enum_NT: 75, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: aSSIGNOP, Enum_T: 34, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Expression -> sEMICOL -> [END]


==============>  Name: LvalueIDStmt, Enum_T: -1, Enum_NT: 28, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N11 -> [END]


==============>  Name: Factor, Enum_T: -1, Enum_NT: 50, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N5 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N11, Enum_T: -1, Enum_NT: 51, IS_A: Non Terminal
First: #,sQBO
Follow: mUL,dIV,bC,lT,lE,gT,gE,eQ,nE,oR,aND,mINUS,pLUS,cOMMA,sEMICOL
Right: [HEAD] -> [END]


==============>  Name: Term, Enum_T: -1, Enum_NT: 48, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N4 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N5, Enum_T: -1, Enum_NT: 49, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticExpr, Enum_T: -1, Enum_NT: 46, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N8 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N4, Enum_T: -1, Enum_NT: 47, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: AnyTerm, Enum_T: -1, Enum_NT: 44, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N7 -> [END]


==============>  Name: lE, Enum_T: 45, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: RelationalOp, Enum_T: -1, Enum_NT: 62, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> ArithmeticExpr -> [END]


==============>  Name: N8, Enum_T: -1, Enum_NT: 45, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N11 -> [END]


==============>  Name: Factor, Enum_T: -1, Enum_NT: 50, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N5 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N11, Enum_T: -1, Enum_NT: 51, IS_A: Non Terminal
First: #,sQBO
Follow: mUL,dIV,bC,lT,lE,gT,gE,eQ,nE,oR,aND,mINUS,pLUS,cOMMA,sEMICOL
Right: [HEAD] -> [END]


==============>  Name: Term, Enum_T: -1, Enum_NT: 48, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N4 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N5, Enum_T: -1, Enum_NT: 49, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticExpr, Enum_T: -1, Enum_NT: 46, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N4, Enum_T: -1, Enum_NT: 47, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticOrBooleanExpr, Enum_T: -1, Enum_NT: 42, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N7, Enum_T: -1, Enum_NT: 43, IS_A: Non Terminal
First: #,aND,oR
Follow: sEMICOL,bC
Right: [HEAD] -> [END]


==============>  Name: Expression, Enum_T: -1, Enum_NT: 38, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: pRINT, Enum_T: 29, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> Var_print -> bC -> sEMICOL -> [END]


==============>  Name: IoStmt, Enum_T: -1, Enum_NT: 18, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Var_print -> bC -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> P1 -> [END]


==============>  Name: Var_print, Enum_T: -1, Enum_NT: 23, IS_A: Non Terminal
First: tRUE,fALSE,rNUM,nUM,iD
Follow: bC
Right: [HEAD] -> bC -> sEMICOL -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: P1, Enum_T: -1, Enum_NT: 24, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: eND, Enum_T: 25, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: sQBO, Enum_T: 13, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> IdList -> sQBC -> aSSIGNOP -> [END]


==============>  Name: Optional, Enum_T: -1, Enum_NT: 35, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> uSE -> mODULE -> iD -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N3 -> [END]


==============>  Name: IdList, Enum_T: -1, Enum_NT: 36, IS_A: Non Terminal
First: iD
Follow: cOLON,sQBC
Right: [HEAD] -> sQBC -> aSSIGNOP -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N3, Enum_T: -1, Enum_NT: 37, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: sQBC, Enum_T: 14, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> aSSIGNOP -> [END]


==============>  Name: aSSIGNOP, Enum_T: 34, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ModuleReuseStmt, Enum_T: -1, Enum_NT: 33, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: uSE, Enum_T: 37, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> mODULE -> iD -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: mODULE, Enum_T: 2, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iD -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: wITH, Enum_T: 38, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: pARAMETERS, Enum_T: 39, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: Actual_para_list, Enum_T: -1, Enum_NT: 34, IS_A: Non Terminal
First: nUM,rNUM,fALSE,tRUE,iD,pLUS,mINUS
Follow: sEMICOL
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: sQBO, Enum_T: 13, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> IdList -> sQBC -> aSSIGNOP -> [END]


==============>  Name: Optional, Enum_T: -1, Enum_NT: 35, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> uSE -> mODULE -> iD -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: IdList, Enum_T: -1, Enum_NT: 36, IS_A: Non Terminal
First: iD
Follow: cOLON,sQBC
Right: [HEAD] -> sQBC -> aSSIGNOP -> [END]


==============>  Name: sQBC, Enum_T: 14, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> aSSIGNOP -> [END]


==============>  Name: aSSIGNOP, Enum_T: 34, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ModuleReuseStmt, Enum_T: -1, Enum_NT: 33, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: uSE, Enum_T: 37, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> mODULE -> iD -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: mODULE, Enum_T: 2, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iD -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> wITH -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: wITH, Enum_T: 38, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> pARAMETERS -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: pARAMETERS, Enum_T: 39, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Actual_para_list -> sEMICOL -> [END]


==============>  Name: Actual_para_list, Enum_T: -1, Enum_NT: 34, IS_A: Non Terminal
First: nUM,rNUM,fALSE,tRUE,iD,pLUS,mINUS
Follow: sEMICOL
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: dECLARE, Enum_T: 0, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> IdList -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: DeclareStmt, Enum_T: -1, Enum_NT: 63, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N3 -> [END]


==============>  Name: IdList, Enum_T: -1, Enum_NT: 36, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N3, Enum_T: -1, Enum_NT: 37, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: cOLON, Enum_T: 16, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> DataType -> sEMICOL -> [END]


==============>  Name: DataType, Enum_T: -1, Enum_NT: 12, IS_A: Non Terminal
First: aRRAY,bOOLEAN,rEAL,iNTEGER
Follow: sEMICOL,sQBC,cOMMA
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: dECLARE, Enum_T: 0, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> IdList -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: DeclareStmt, Enum_T: -1, Enum_NT: 63, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N3 -> [END]


==============>  Name: IdList, Enum_T: -1, Enum_NT: 36, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> cOLON -> DataType -> sEMICOL -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N3, Enum_T: -1, Enum_NT: 37, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: cOLON, Enum_T: 16, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> DataType -> sEMICOL -> [END]


==============>  Name: iNTEGER, Enum_T: 18, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: DataType, Enum_T: -1, Enum_NT: 12, IS_A: Non Terminal
First: aRRAY,bOOLEAN,rEAL,iNTEGER
Follow: sEMICOL,sQBC,cOMMA
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: aSSIGNOP, Enum_T: 34, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Expression -> sEMICOL -> [END]


==============>  Name: LvalueIDStmt, Enum_T: -1, Enum_NT: 28, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: nUM, Enum_T: 32, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Factor, Enum_T: -1, Enum_NT: 50, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N5 -> [END]


==============>  Name: Term, Enum_T: -1, Enum_NT: 48, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N4 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N5, Enum_T: -1, Enum_NT: 49, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticExpr, Enum_T: -1, Enum_NT: 46, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N8 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N4, Enum_T: -1, Enum_NT: 47, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: AnyTerm, Enum_T: -1, Enum_NT: 44, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N7 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N8, Enum_T: -1, Enum_NT: 45, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticOrBooleanExpr, Enum_T: -1, Enum_NT: 42, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N7, Enum_T: -1, Enum_NT: 43, IS_A: Non Terminal
First: #,aND,oR
Follow: sEMICOL,bC
Right: [HEAD] -> [END]


==============>  Name: Expression, Enum_T: -1, Enum_NT: 38, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: wHILE, Enum_T: 56, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> ArithmeticOrBooleanExpr -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: IterativeStmt, Enum_T: -1, Enum_NT: 69, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> ArithmeticOrBooleanExpr -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N11 -> [END]


==============>  Name: Factor, Enum_T: -1, Enum_NT: 50, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N5 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N11, Enum_T: -1, Enum_NT: 51, IS_A: Non Terminal
First: #,sQBO
Follow: mUL,dIV,bC,lT,lE,gT,gE,eQ,nE,oR,aND,mINUS,pLUS,cOMMA,sEMICOL
Right: [HEAD] -> [END]


==============>  Name: Term, Enum_T: -1, Enum_NT: 48, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N4 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N5, Enum_T: -1, Enum_NT: 49, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticExpr, Enum_T: -1, Enum_NT: 46, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N8 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N4, Enum_T: -1, Enum_NT: 47, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: AnyTerm, Enum_T: -1, Enum_NT: 44, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N7 -> [END]


==============>  Name: lE, Enum_T: 45, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: RelationalOp, Enum_T: -1, Enum_NT: 62, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> ArithmeticExpr -> [END]


==============>  Name: N8, Enum_T: -1, Enum_NT: 45, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N11 -> [END]


==============>  Name: Factor, Enum_T: -1, Enum_NT: 50, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N5 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N11, Enum_T: -1, Enum_NT: 51, IS_A: Non Terminal
First: #,sQBO
Follow: mUL,dIV,bC,lT,lE,gT,gE,eQ,nE,oR,aND,mINUS,pLUS,cOMMA,sEMICOL
Right: [HEAD] -> [END]


==============>  Name: Term, Enum_T: -1, Enum_NT: 48, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N4 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N5, Enum_T: -1, Enum_NT: 49, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticExpr, Enum_T: -1, Enum_NT: 46, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N4, Enum_T: -1, Enum_NT: 47, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticOrBooleanExpr, Enum_T: -1, Enum_NT: 42, IS_A: Non Terminal
First: iD,tRUE,fALSE,rNUM,nUM,bO
Follow: bC,sEMICOL
Right: [HEAD] -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N7, Enum_T: -1, Enum_NT: 43, IS_A: Non Terminal
First: #,aND,oR
Follow: sEMICOL,bC
Right: [HEAD] -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sTART -> Statements -> eND -> [END]


==============>  Name: sTART, Enum_T: 24, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> eND -> [END]


==============>  Name: gET_VALUE, Enum_T: 26, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> iD -> bC -> sEMICOL -> [END]


==============>  Name: IoStmt, Enum_T: -1, Enum_NT: 18, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iD -> bC -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bC -> sEMICOL -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> eND -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: sQBO, Enum_T: 13, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Element_index_with_expressions -> sQBC -> aSSIGNOP -> Expression -> sEMICOL -> [END]


==============>  Name: LvalueARRStmt, Enum_T: -1, Enum_NT: 29, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArrFactor, Enum_T: -1, Enum_NT: 58, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Arr_N5 -> [END]


==============>  Name: ArrTerm, Enum_T: -1, Enum_NT: 56, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Arr_N4 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Arr_N5, Enum_T: -1, Enum_NT: 57, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArrExpr, Enum_T: -1, Enum_NT: 54, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Arr_N4, Enum_T: -1, Enum_NT: 55, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Element_index_with_expressions, Enum_T: -1, Enum_NT: 52, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sQBC -> aSSIGNOP -> Expression -> sEMICOL -> [END]


==============>  Name: sQBC, Enum_T: 14, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> aSSIGNOP -> Expression -> sEMICOL -> [END]


==============>  Name: aSSIGNOP, Enum_T: 34, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Expression -> sEMICOL -> [END]


==============>  Name: Expression, Enum_T: -1, Enum_NT: 38, IS_A: Non Terminal
First: mINUS,pLUS,bO,nUM,rNUM,fALSE,tRUE,iD
Follow: sEMICOL
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: fOR, Enum_T: 54, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> iD -> iN -> Range_for_loop -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: IterativeStmt, Enum_T: -1, Enum_NT: 69, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iD -> iN -> Range_for_loop -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> iN -> Range_for_loop -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: iN, Enum_T: 55, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Range_for_loop -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: Range_for_loop, Enum_T: -1, Enum_NT: 71, IS_A: Non Terminal
First: mINUS,pLUS,nUM
Follow: bC
Right: [HEAD] -> bC -> sTART -> Statements -> eND -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sTART -> Statements -> eND -> [END]


==============>  Name: sTART, Enum_T: 24, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> eND -> [END]


==============>  Name: pRINT, Enum_T: 29, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> bO -> Var_print -> bC -> sEMICOL -> [END]


==============>  Name: IoStmt, Enum_T: -1, Enum_NT: 18, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bO, Enum_T: 27, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Var_print -> bC -> sEMICOL -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> P1 -> [END]


==============>  Name: Var_print, Enum_T: -1, Enum_NT: 23, IS_A: Non Terminal
First: tRUE,fALSE,rNUM,nUM,iD
Follow: bC
Right: [HEAD] -> bC -> sEMICOL -> [END]


==============>  Name: sQBO, Enum_T: 13, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Index_arr -> sQBC -> [END]


==============>  Name: P1, Enum_T: -1, Enum_NT: 24, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: New_index, Enum_T: -1, Enum_NT: 31, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Index_arr, Enum_T: -1, Enum_NT: 30, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sQBC -> [END]


==============>  Name: sQBC, Enum_T: 14, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: bC, Enum_T: 28, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> eND -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> WhichStmt -> [END]


==============>  Name: AssignmentStmt, Enum_T: -1, Enum_NT: 26, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: aSSIGNOP, Enum_T: 34, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Expression -> sEMICOL -> [END]


==============>  Name: LvalueIDStmt, Enum_T: -1, Enum_NT: 28, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: iD, Enum_T: 3, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N11 -> [END]


==============>  Name: Factor, Enum_T: -1, Enum_NT: 50, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N5 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N11, Enum_T: -1, Enum_NT: 51, IS_A: Non Terminal
First: #,sQBO
Follow: mUL,dIV,bC,lT,lE,gT,gE,eQ,nE,oR,aND,mINUS,pLUS,cOMMA,sEMICOL
Right: [HEAD] -> [END]


==============>  Name: Term, Enum_T: -1, Enum_NT: 48, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N4 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N5, Enum_T: -1, Enum_NT: 49, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticExpr, Enum_T: -1, Enum_NT: 46, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N8 -> [END]


==============>  Name: pLUS, Enum_T: 35, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Op1, Enum_T: -1, Enum_NT: 59, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Term -> N4 -> [END]


==============>  Name: N4, Enum_T: -1, Enum_NT: 47, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: nUM, Enum_T: 32, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Factor, Enum_T: -1, Enum_NT: 50, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N5 -> [END]


==============>  Name: Term, Enum_T: -1, Enum_NT: 48, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N4 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N5, Enum_T: -1, Enum_NT: 49, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N4, Enum_T: -1, Enum_NT: 47, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: AnyTerm, Enum_T: -1, Enum_NT: 44, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> N7 -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N8, Enum_T: -1, Enum_NT: 45, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: ArithmeticOrBooleanExpr, Enum_T: -1, Enum_NT: 42, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: N7, Enum_T: -1, Enum_NT: 43, IS_A: Non Terminal
First: #,aND,oR
Follow: sEMICOL,bC
Right: [HEAD] -> [END]


==============>  Name: Expression, Enum_T: -1, Enum_NT: 38, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> sEMICOL -> [END]


==============>  Name: sEMICOL, Enum_T: 4, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: WhichStmt, Enum_T: -1, Enum_NT: 27, IS_A: Non Terminal
First: sQBO,aSSIGNOP
Follow: pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR,bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: SimpleStmt, Enum_T: -1, Enum_NT: 25, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: eND, Enum_T: 25, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: #, Enum_T: 0, Enum_NT: 0, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: eND, Enum_T: 25, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: Statement, Enum_T: -1, Enum_NT: 17, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> Statements -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: Statements, Enum_T: -1, Enum_NT: 16, IS_A: Non Terminal
First: #,pRINT,gET_VALUE,sQBO,uSE,iD,dECLARE,sWITCH,wHILE,fOR
Follow: bREAK,eND
Right: [HEAD] -> [END]


==============>  Name: eND, Enum_T: 25, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: OtherModules, Enum_T: -1, Enum_NT: 4, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> DriverModule -> OtherModules -> [END]


==============>  Name: OtherModules, Enum_T: -1, Enum_NT: 4, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: DriverModule, Enum_T: -1, Enum_NT: 5, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> OtherModules -> [END]


==============>  Name: OtherModules, Enum_T: -1, Enum_NT: 4, IS_A: Non Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


==============>  Name: S, Enum_T: -1, Enum_NT: 0, IS_A: Non Terminal
First: dECLARE,dEF,dRIVERDEF
Follow: List is empty
Right: [HEAD] -> Program -> $ -> [END]


==============>  Name: $, Enum_T: 1, Enum_NT: -1, IS_A: Terminal
First: List is empty
Follow: List is empty
Right: [HEAD] -> [END]


